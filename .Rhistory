outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
# I will be using temp as an alt to the actual modified dataset until everything is finalized.
temp = modified_data
#remeber which attributes to remove
toremove = as.vector(0)
attrib = 0
global = 0
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer'){
print("ha")
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print("haha")
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# global = global + 1
# toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer'){
graph = boxplot(temp[,attrib])
length(graph$out)
graph$out
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# Reassigning levels
temp$MSSubClass <- factor(temp$MSSubClass)
levels(temp$MSSubClass) <- list(One_Story=c(" 20"," 30"," 40"," 45", " 50"), Two_Story=c(" 60"," 70"," 75"), SplitDuplex=c(" 80"," 85"," 90"), PUD=c("120","160","180","190"))
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# global = global + 1
# toremove[global] = attrib
}
knitr::opts_chunk$set(echo = TRUE)
install.packages("e1071")
install.packages("ggplot2")
##install.packages("plyr")
##library("plyr")
library("ggplot2")
library("e1071")
entropy = function(cat.vect){
px  = table(cat.vect)/length(cat.vect)
lpx = log(px, base=2)
ent = -sum(px*lpx)
return(ent)
}
knitr::opts_chunk$set(echo = TRUE)
#install.packages("e1071")
#install.packages("ggplot2")
##install.packages("plyr")
##library("plyr")
library("ggplot2")
library("e1071")
entropy = function(cat.vect){
px  = table(cat.vect)/length(cat.vect)
lpx = log(px, base=2)
ent = -sum(px*lpx)
return(ent)
}
raw_data = read.csv2(file='C:\\Users\\Abdullah\\Desktop\\housePrices\\train.csv', header = T, sep = ",", dec = ".",stringsAsFactors = FALSE)
modified_data = raw_data ## To ensure we do not touch original data, we replicate into another df and use that as modified version
str(raw_data)
head(raw_data)
summary(raw_data$SalePrice)
typeof(raw_data$SalePrice)
myhist <- hist(raw_data$SalePrice)
multiplier <- myhist$counts / myhist$density
mydensity <- density(raw_data$SalePrice)
mydensity$y <- mydensity$y * multiplier[1]
plot(myhist, xlab = "Sales Price", main = "Histogram of Sales")
lines(mydensity)
skew = skewness(raw_data$SalePrice)
kurt = kurtosis(raw_data$SalePrice)
cat("Skewness: ", skew)
cat("\nKurtosis: ", kurt)
boxplot(raw_data$SalePrice)
count = 0;
x = 1;
while (x < 1461) {
if (raw_data$SalePrice[x] > 340000){
count = count + 1
}
x = x + 1
}
cat("Number of Sales that lie as outliers are: ", count)
outlier_sales <- subset(raw_data, raw_data$SalePrice > 340000)
outlier_sales
# Counting number of nulls in each col
x = 1
cat("---NULL COUNT---\n")
while (x<81){
if(sum(is.na((raw_data[x]))>0)){
cat("Number of nulls in ",(colnames(raw_data[x])), ": ")
cat(sum(is.na(raw_data[x])), "\n")
}
x = x + 1
}
v = 1
while (v<1461){
if (is.na(modified_data$LotFrontage[v])){
modified_data$LotFrontage[v] = 0
}
v = v + 1
}
v = 1
while (v<1461){
if (is.na(modified_data$Alley[v])){
modified_data$Alley[v] = "None"
}
v = v + 1
}
MasVnr <- subset(raw_data, is.na(raw_data$MasVnrType))
MasVnr$Area <- subset(raw_data, is.na(raw_data$MasVnrArea))
MasVnr
modified_data <- subset(modified_data, !is.na(raw_data$MasVnrType)) # we only do it for when one attribute isnt na, because the other overlaps.
Bsmt <- subset(raw_data, is.na(raw_data$BsmtExposure))
Bsmt
v = 1
while (v<1453){
if (is.na(modified_data$BsmtQual[v])){
modified_data$BsmtQual[v] = "NoB"
}
if (is.na(modified_data$BsmtCond[v])){
modified_data$BsmtCond[v] = "NoB"
}
if (is.na(modified_data$BsmtExposure[v])){
modified_data$BsmtExposure[v] = "NoB"
}
if (is.na(modified_data$BsmtFinType1[v])){
modified_data$BsmtFinType1[v] = "NoB"
}
if (is.na(modified_data$BsmtFinType2[v])){
modified_data$BsmtFinType2[v] = "NoB"
}
v = v + 1
}
Bsmt1 <- subset(modified_data, modified_data$BsmtExposure == "NoB")
Bsmt1
Bsmt2 <- subset(modified_data, modified_data$BsmtFinType2 == "NoB")
Bsmt2
modified_data <- modified_data[-c(949),]
modified_data <- modified_data[-c(333),]
modified_data <- subset(modified_data, !is.na(modified_data$Electrical))
v = 1
while (v<1450){
if (is.na(modified_data$FireplaceQu[v])){
modified_data$FireplaceQu[v] = "NoF"
}
v = v + 1
}
v = 1
while (v<1450){
if (is.na(modified_data$GarageType[v])){
modified_data$GarageType[v] = "NoG"
}
if (is.na(modified_data$GarageYrBlt[v])){
modified_data$GarageYrBlt[v] = "NoG"
}
if (is.na(modified_data$GarageFinish[v])){
modified_data$GarageFinish[v] = "NoG"
}
if (is.na(modified_data$GarageQual[v])){
modified_data$GarageQual[v] = "NoG"
}
if (is.na(modified_data$GarageCond[v])){
modified_data$GarageCond[v] = "NoG"
}
v = v + 1
}
v = 1
while (v<1450){
if (is.na(modified_data$PoolQC[v])){
modified_data$PoolQC[v] = "NoP"
}
if (is.na(modified_data$Fence[v])){
modified_data$Fence[v] = "NoF"
}
if (is.na(modified_data$MiscFeature[v])){
modified_data$MiscFeature[v] = "NoM"
}
v = v + 1
}
x = 1
cat("---NULL COUNT---\n")
while (x<81){
if(sum(is.na((modified_data[x]))>0)){
cat("Number of nulls in ",(colnames(modified_data[x])), ": ")
cat(sum(is.na(modified_data[x])), "\n")
}
x = x + 1
}
outlier_sales <- subset(modified_data, modified_data$SalePrice > 340000)
outlier_sales[order(outlier_sales$SalePrice),]
modified_data$MSSubClass <- formatC(modified_data$MSSubClass)
#modified_data$OverallQual <- formatC(modified_data$OverallQual)
#modified_data$OverallCond <- formatC(modified_data$OverallCond)
#Graphing the distribution of each factor in each categorical attribute
a = 2
colname <- colnames(modified_data)
while (a < 81){
if (a == 18 || a == 19){
print(ggplot(data = modified_data, aes(x=modified_data[,a], y=modified_data$SalePrice)) + geom_boxplot(aes(fill = factor(modified_data[,a]) )) +scale_x_discrete(name = (colname[a])) + labs(fill = (colname[a])))
}
if (is.character(modified_data[,a]) ){
print(ggplot(data = modified_data, aes(x=modified_data[,a], y=modified_data$SalePrice)) + geom_boxplot(aes(fill = factor(modified_data[,a]) )) +scale_x_discrete(name = (colname[a])) + labs(fill = (colname[a])))
}
else{
if (a < 18 || a >19){
cat("Attribute #", a," is a quantitative variable. (", colname[a], ")\n")
}
}
a = a + 1
}
# I will be using temp as an alt to the actual modified dataset until everything is finalized.
temp = modified_data
#remeber which attributes to remove
toremove = as.vector(0)
attrib = 0
global = 0
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer'){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# global = global + 1
# toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer'){
graph = boxplot(temp[,attrib])
length(graph$out)
graph$out
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# Reassigning levels
temp$MSSubClass <- factor(temp$MSSubClass)
levels(temp$MSSubClass) <- list(One_Story=c(" 20"," 30"," 40"," 45", " 50"), Two_Story=c(" 60"," 70"," 75"), SplitDuplex=c(" 80"," 85"," 90"), PUD=c("120","160","180","190"))
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# global = global + 1
# toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer'){
graph = boxplot(temp[,attrib])
length(graph$out)
graph$out
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# global = global + 1
# toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# global = global + 1
# toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# Reassigning levels
temp$LotShape <- factor(temp$LotShape)
levels(temp$LotShape) <- list(IR=c("IR1","IR2","IR3"), Reg="Reg")
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
# global = global + 1
# toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
#global = global + 1
#toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
#global = global + 1
#toremove[global] = attrib
}
attrib = attrib + 1
colname[attrib]
if (typeof(temp[,attrib]) == 'integer' ||(typeof(temp[,attrib]) == 'double')){
graph = boxplot(temp[,attrib])
print(length(graph$out))
print(graph$out)
outlierID = which(temp[,attrib]>graph$stats[5],)
temp[outlierID,]
}
if (typeof(temp[,attrib]) == 'character'){
print(as.data.frame(table(temp[,attrib])))
print(ggplot(data = temp, aes(x=temp[,attrib], y=temp$SalePrice)) + geom_boxplot(aes(fill = factor(temp[,attrib]) )) +scale_x_discrete(name = (colname[attrib])) + labs(fill = (colname[attrib])))
global = global + 1
toremove[global] = attrib
}
